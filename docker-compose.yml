version: '3.8'

services:
  frontend:
    build:
      context: ./pied_pipers
      dockerfile: Dockerfile
    container_name: odyssey-frontend
    restart: unless-stopped
    expose:
      - '3000'
    environment:
      - NODE_ENV=production  # Changed to production
      - NEXT_PUBLIC_CMS_URL=https://odyssey.mareon.dev
      - NEXT_PUBLIC_PAYLOAD_API_URL=https://odyssey.mareon.dev/api
      - INTERNAL_PAYLOAD_API_URL=http://odyssey-cms:3001/api
    networks:
      - shared_portainer_network
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://localhost:3000']
      interval: 30s
      timeout: 10s
      retries: 3

  cms:
    build:
      context: ./pied_pipers-cms/restaurant-cms
      dockerfile: Dockerfile
    container_name: odyssey-cms
    restart: unless-stopped
    expose:
      - '3001'
    environment:
      - NODE_ENV=production  # Changed to production
      - PORT=3001
      - NODE_OPTIONS=--no-deprecation
      - HOSTNAME=0.0.0.0  # Added to ensure binding to all interfaces
      - MONGODB_URL=${MONGODB_URL}
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - PAYLOAD_PUBLIC_SERVER_URL=https://odyssey.mareon.dev
      - PAYLOAD_CONFIG_PATH=src/payload.config.ts
      - NEXT_PUBLIC_SERVER_URL=https://odyssey.mareon.dev
      # Removed asset prefix - simplifying the setup
      - DEBUG=payload*  # Keep for better debugging
    volumes:
      - cms-media:/app/media
    depends_on:
      - mongo
    networks:
      - shared_portainer_network
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://localhost:3001/api/health']
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:6
    container_name: odyssey-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=odyssey
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    expose:
      - '27017'
    networks:
      - shared_portainer_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/admin -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --quiet || true
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  shared_portainer_network:
    external: true

volumes:
  mongo-data:
  cms-media: